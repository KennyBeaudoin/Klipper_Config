# This file contains common pin mappings for the BigTreeTech OctoPus V1.1
# To use this config, the firmware should be compiled for the STM32F407 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "8MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus v1.1 with that SD card.

# See docs/Config_Reference.md for a description of parameters.
[include macros.cfg]

[include mainsail.cfg]

[include neopixel.cfg]


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
 #   127, 127, 20  # an example

[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
endstop_pin: PG6
position_endstop: 255
position_max: 255
homing_speed: 100

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
endstop_pin: PG9
position_endstop: 255
position_max: 255
homing_speed: 100

[stepper_z]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 32
rotation_distance: 2
endstop_pin: probe:z_virtual_endstop
#endstop_pin: PG10
position_max: 300
position_min: -16
homing_speed: 6
second_homing_speed: 1

[stepper_z1]
step_pin: PE6
dir_pin: !PA14
enable_pin: !PE0
rotation_distance: 2
microsteps: 32

[stepper_z2]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 2
microsteps: 32


[extruder]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
heater_pin: PA3 # HE0
sensor_pin:  PF4
microsteps: 32
full_steps_per_rotation:200
rotation_distance: 3.570
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance:500
max_extrude_cross_section: 50.0
max_extrude_only_velocity:120
pressure_advance:0.00
pressure_advance_smooth_time:0.01
sensor_type: ATC Semitec 104NT-4-R025H42G
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 290

[heater_bed]
heater_pin: PA2
sensor_pin: PF3
sensor_type: EPCOS 100K B57560G104F
control: pid
pid_Kp: 690.34
pid_Ki: 111.47
pid_Kd: 1068.83
max_power: 0.75
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.0166


[fan]
pin: PA8 # FAN0

[heater_fan fan1]
pin: PE5 # FAN1

[temperature_fan BTT]
pin: PD12
###   FAN Cooling based on BTT BOARD temp   ### 
max_power: 1.0
sensor_type: temperature_mcu
#You can replace host by mcu to use Controller Board temperature instead of the RPI
target_temp: 32
min_temp:  5
max_temp: 80
control: watermark
#   'watermark' controlled heaters this is the number of degrees in
#   Celsius above the target temperature before disabling the heater
#   as well as the number of degrees below the target before
#   re-enabling the heater. The default is 2 degrees Celsius.



[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_37005C001451313133353932-if00
restart_method: command

#######################################################################



[display_status]

[filament_motion_sensor encoder_sensor]
detection_length: 4
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: ^PG11
# changing the switch_pin name according to your motherboard
pause_on_runout: True
insert_gcode:
    M117 Insert Detected
runout_gcode:
    M117 Runout Detected
    RUNOUT
#event_delay:
#pause_delay:

#######################################################################
##################################################################
##################################################################

#restart_method: command
# setup for PA9, PA10 USART1_tx / rx directly connected to the RPI GPIO TX / RX pins
# These are the pins the OctoPus uses for its built in RPI 40 pin connector
# only connect GND, TX, RX - supply 5v power to the RPI separately
# do not cross over TX/RX - it is done internally on the OctoPus PCB.
# Use "sudo raspi-config" to disable the serial terminal - but enable the serial port.
# When running "make menuconfig" you must un-select the USB Serial check box

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 7000
max_z_velocity: 8
max_z_accel: 150


[safe_z_home]
home_xy_position: 158, 134
speed: 150
z_hop: 5
z_hop_speed: 5

[bltouch]
sensor_pin: ^PB7
control_pin: PB6
x_offset: -33.5
y_offset: -5
#z_offset: 0
speed: 7
samples: 2
sample_retract_dist: 2.0
probe_with_touch_mode: True
stow_on_each_sample: False


[bed_mesh]
speed: 160
horizontal_move_z: 4
mesh_min: 15, 10
mesh_max: 220, 240
probe_count: 5, 5 
fade_start: 1
fade_end: 10



[z_tilt]
z_positions: 
    10, 10 #stepper_z Mini Tank
    127.5, 245 #stepper_z2 Mini Tank
    245, 10 #stepper_z1 Mini Tank
  
points: 
    50, 15  #probe location Right Rear
    159, 245 #probe location Left Rear
    255, 15 #probe location Left Front

## Uncomment below for 250mm build
#z_positions:
#    -50, 18
#    125, 298
#    300, 18
#points:
#    30, 5
#    125, 195
#    220, 5

speed: 150
horizontal_move_z: 30
retries: 4 # Number of times to retry if the probed points aren't within tolerance.
retry_tolerance:0.015

# A list of X,Y coordinates (one per line; subsequent lines

# indented) describing the location of each bed "pivot point". The

# "pivot point" is the point where the bed attaches to the given Z

# stepper. It is described using nozzle coordinates (the XY position

# of the nozzle if it could move directly above the point). The

# first entry corresponds to stepper_z, the second to stepper_z1,

# the third to stepper_z2, etc. This parameter must be provided.


# A list of X,Y coordinates (one per line; subsequent lines | back |

# indented) that should be probed during a Z_TILT_ADJUST command. | |

# Specify coordinates of the nozzle and be sure the probe is above L z1 z R

# the bed at the given nozzle coordinates. This parameter must be | |

# provided. | front |


# Number of times to retry if the probed points aren't within

# tolerance.

# If retries are enabled then retry if largest and smallest probed

# points differ more than retry_tolerance. Note the smallest unit of

# change here would be a single step. However if you are probing

# more points than steppers then you will likely have a fixed

# minimum value for the range of probed points which you can learn

# by observing command output.


########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
run_current: 0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD11
run_current: 0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC7
interpolate: False
run_current: 0.65
#sense_resistor: 0.110
#stealthchop_threshold: 0

[tmc2209 stepper_z1]
uart_pin: PE4
interpolate: False
run_current: 0.65
#sense_resistor: 0.110
#stealthchop_threshold: 0

[tmc2209 stepper_z2]
uart_pin: PD3
interpolate: False
run_current: 0.65
#sense_resistor: 0.110
#stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.67
#hold_current: 0.6
#stealthchop_threshold: 999999

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 75.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 85.8
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.848
#*# pid_ki = 1.755
#*# pid_kd = 68.001
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.023750, -0.051875, -0.023750, 0.016875, 0.106875
#*# 	0.077656, -0.030156, 0.020156, 0.033594, 0.121250
#*# 	0.004375, -0.008750, -0.013906, 0.069531, 0.161562
#*# 	-0.014219, -0.021406, -0.001875, 0.047812, 0.166250
#*# 	0.077344, 0.068906, 0.108437, 0.136562, 0.250937
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 220.0
#*# min_y = 10.0
#*# max_y = 240.0
#*#
#*# [bltouch]
#*# z_offset = 1.825
